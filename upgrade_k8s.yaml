---
- name: Upgrade Control Planes
  tags: upgrade
  gather_facts: true
  hosts: controlplanes
  serial: 1
  roles:
    - variables
  tasks:
    - name: Get Kubelet Minor Version
      shell: "if [ ! -z $(which kubelet) ]; then kubelet --version | awk '{ print $2 }' | grep -oP '([0-9].[0-9]+)'; fi"
      become: yes
      args:
        executable: "/bin/bash"
      register: kubelet_minor_version
      changed_when: false

    - name: Get Kubelet Revision
      shell: "if [ ! -z $(which kubelet) ]; then kubelet --version | awk '{ print $2 }' | grep -oP '(?!\\.)([0-9]+)$'; fi"
      become: yes
      args:
        executable: "/bin/bash"
      register: kubelet_revision
      changed_when: false

    - debug:
        msg:
          - "Current Kubelet Version Found: {{ kubelet_minor_version.stdout }}.{{ kubelet_revision.stdout }}"
          - "{% if kubernetes_minor_version|float > kubelet_minor_version.stdout|float %}Will attempt to upgrade to Minor Version: {{ kubernetes_minor_version }}{% elif kubernetes_minor_version|float < kubelet_minor_version.stdout|float %}Will not downgrade to Minor Version: {{ kubernetes_minor_version }}, this task will now fail{% else %}No change to Minor Version{% endif %}"
          - "{% if kubernetes_revision|int > kubelet_revision.stdout|int %}Will attempt to upgrade to Revision: {{ kubernetes_revision }}{% elif kubernetes_revision|int < kubelet_revision.stdout|int and kubernetes_minor_version|float == kubelet_minor_version.stdout|float %}Will not downgrade to Revision: {{ kubernetes_revision }}, this task will now fail{% else %}No change to Revision{% if kubernetes_minor_version|float == kubelet_minor_version.stdout|float %}, this will now fail{% endif %}{% endif %}"
      when:
        - kubelet_minor_version.stdout != ""
        - kubelet_revision.stdout != ""
      failed_when: (kubernetes_minor_version|float < kubelet_minor_version.stdout|float) or
        ((kubernetes_minor_version|float == kubelet_minor_version.stdout|float) and (kubernetes_revision|int <= kubelet_revision.stdout|int))

    # upgrade kubeadm
    - import_role:
        name: kubernetes.common
        tasks_from: upgrade_kubeadm.yaml

    # upgrade kubelet
    - import_role:
        name: kubernetes.common
        tasks_from: upgrade_kubelet.yaml

- name: Upgrade Workers
  tags: upgrade
  gather_facts: true
  hosts: workers
  serial: 1
  roles:
    - variables
  tasks:
    - name: Get Kubelet Minor Version
      shell: "if [ ! -z $(which kubelet) ]; then kubelet --version | awk '{ print $2 }' | grep -oP '([0-9].[0-9]+)'; fi"
      become: yes
      args:
        executable: "/bin/bash"
      register: kubelet_minor_version
      changed_when: false

    - name: Get Kubelet Revision
      shell: "if [ ! -z $(which kubelet) ]; then kubelet --version | awk '{ print $2 }' | grep -oP '(?!\\.)([0-9]+)$'; fi"
      become: yes
      args:
        executable: "/bin/bash"
      register: kubelet_revision
      changed_when: false

    - debug:
        msg:
          - "Current Kubelet Version Found: {{ kubelet_minor_version.stdout }}.{{ kubelet_revision.stdout }}"
          - "{% if kubernetes_minor_version|float > kubelet_minor_version.stdout|float %}Will attempt to upgrade to Minor Version: {{ kubernetes_minor_version }}{% elif kubernetes_minor_version|float < kubelet_minor_version.stdout|float %}Will not downgrade to Minor Version: {{ kubernetes_minor_version }}, this task will now fail{% else %}No change to Minor Version{% endif %}"
          - "{% if kubernetes_revision|int > kubelet_revision.stdout|int %}Will attempt to upgrade to Revision: {{ kubernetes_revision }}{% elif kubernetes_revision|int < kubelet_revision.stdout|int and kubernetes_minor_version|float == kubelet_minor_version.stdout|float %}Will not downgrade to Revision: {{ kubernetes_revision }}, this task will now fail{% else %}No change to Revision{% if kubernetes_minor_version|float == kubelet_minor_version.stdout|float %}, this will now fail{% endif %}{% endif %}"
      when:
        - kubelet_minor_version.stdout != ""
        - kubelet_revision.stdout != ""
      failed_when: (kubernetes_minor_version|float < kubelet_minor_version.stdout|float) or
        ((kubernetes_minor_version|float == kubelet_minor_version.stdout|float) and (kubernetes_revision|int <= kubelet_revision.stdout|int))

    # upgrade kubeadm
    - import_role:
        name: kubernetes.common
        tasks_from: upgrade_kubeadm_worker.yaml

    # upgrade kubelet
    - import_role:
        name: kubernetes.common
        tasks_from: upgrade_kubelet.yaml

- name: Check that all nodes are upgraded
  tags: upgrade
  gather_facts: true
  hosts: controlplanes:workers
  roles:
    - variables
  tasks:
    - name: Get Kubelet Minor Version
      shell: "if [ ! -z $(which kubelet) ]; then kubelet --version | awk '{ print $2 }' | grep -oP '([0-9].[0-9]+)'; fi"
      become: yes
      args:
        executable: "/bin/bash"
      register: kubelet_minor_version
      changed_when: false

    - name: Get Kubelet Revision
      shell: "if [ ! -z $(which kubelet) ]; then kubelet --version | awk '{ print $2 }' | grep -oP '(?!\\.)([0-9]+)$'; fi"
      become: yes
      args:
        executable: "/bin/bash"
      register: kubelet_revision
      changed_when: false

    - debug:
        msg:
          - "Current Kubelet Version Found: {{ kubelet_minor_version.stdout }}.{{ kubelet_revision.stdout }}"
      failed_when:
        - kubernetes_minor_version|float != kubelet_minor_version.stdout|float
        - kubernetes_revision|int != kubelet_revision.stdout|int