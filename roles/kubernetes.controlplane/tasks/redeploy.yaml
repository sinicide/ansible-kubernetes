---
# - debug:
#     msg:
#       - "config_type: {{ config_type }}"
#       - "manifest_filename: {{ manifest_filename }}"
#       - "pod_name: {{ pod_name }}"
#       - "delete_manifest: {{ delete_manifest }}"
#       - "regen_certs: {{ regen_certs }}"
#       - "list_of_certs: {{ list_of_certs }}"
#       - "cert_types: {{ cert_types }}"

- name: Copy ClusterConfiguration for {{ config_type }} to host
  template:
    src: "../templates/kubeadm_controlplane_config.yaml.j2"
    dest: "{{ kube_cluster_config_path }}-{{ config_type }}.yaml"

- name: Copy kubeadm init configuration file to host
  template:
    src: "../templates/{{ kube_init_config_name }}.j2"
    dest: "{{ kube_init_config_path }}"

- name: Delete {{ manifest_filename }} manifest
  file:
    state: "absent"
    path: "{{ kube_manifests_dir }}/{{ manifest_filename }}"
  when: "delete_manifest"
    
- name: Create {{ manifest_filename }} manifest
  shell: "kubeadm init phase {% if config_type == 'etcd' %}etcd local{% else %}control-plane {{ config_type }}{% endif %} --config {{ kube_cluster_config_path }}-{{ config_type }}.yaml"
  become: yes
  args:
    executable: "/bin/bash"
  register: create_manifest_output
  when: "delete_manifest"

- name: Delete {{ config_type }} certs
  file:
    state: "absent"
    path: "{{ kube_certificate_dir }}/{% if config_type == 'etcd' %}etcd/{% endif %}{{ item }}"
  with_items: "{{ list_of_certs }}"
  when: "regen_certs"

- name: Create certs
  shell: "kubeadm init phase certs {{ item }} --config {{ kube_init_config_path }}"
  become: yes
  args:
    executable: "/bin/bash"
  with_items: "{{ cert_types }}"
  when: "regen_certs"

- name: Re-Create Pod
  shell: "kubectl --kubeconfig {{ kube_user_config }} -n kube-system delete pod {{ pod_name }}"
  become: no
  args:
    executable: "/bin/bash"
  register: pod_recreate
  failed_when: "pod_recreate.rc == 2"

- name: Wait for 30 seconds
  wait_for:
    timeout: 30