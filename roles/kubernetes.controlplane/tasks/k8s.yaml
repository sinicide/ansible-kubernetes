---
# TODO:
# [ ] Gather facts for current kubernetes controlplane deployment
# [ ] Add a config update for master node (if changing apiserver-address, cert, or cidr range)

# is there already a running kubernetes node
- name: Check on kubelet status
  systemd:
    name: kubelet
  register: kubelet_status

- name: Initialize the Kubernetes Cluster (kubeadm)
  shell: "kubeadm init --apiserver-advertise-address={{ ansible_default_ipv4.address }} --apiserver-cert-extra-sans={{ ansible_default_ipv4.address }}  --pod-network-cidr={{ cluster_cidr_range }}" 
  become: yes
  args:
    executable: "/bin/bash"
  when: (kubelet_status.status.ActiveState != 'active')

# copy kube config to the default user, allows you to run kubectl without manually have to copy your config over
- include_tasks: copy_kube_config.yaml

# Apply our Kubernetes CNI
- include_role:
    name: kubernetes.cni

# check for existing token first? The awk print is just to avoid grep returning a non-zero exit code
- name: Check for existing token
  shell: "kubeadm token list | grep -ic {{ k8s_token_description }} | awk '{ print $1 }'"
  become: yes
  args:
    executable: "/bin/bash"
  register: k8s_token_count

# if it doesn't exist, let's generate a join command
- name: Generate Join Token
  shell: "kubeadm token create --description {{ k8s_token_description }} --ttl {{ k8s_token_ttl }} > /dev/null 2>&1"
  become: yes
  args:
    executable: "/bin/bash"
  when: "( k8s_token_count.stdout_lines[0] | int == 0)"

# if token does exist, let's just grab the first token found
- name: Get Join Token
  shell: "kubeadm token list | grep -m 1 -i {{ k8s_token_description }} | awk '{ print $1 }'"
  become: yes
  args:
    executable: "/bin/bash"
  register: k8s_join_token

- name: Get Token CA cert hash
  shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
  become: yes
  args:
    executable: "/bin/bash"
  register: k8s_ca_cert_hash

# form join command
- name: Generate Join Command
  set_fact:
    k8s_join_command: "kubeadm join {{ cp_host }}:{{ control_plane_port }} --token {{ k8s_join_token.stdout_lines[0] }} --discovery-token-ca-cert-hash sha256:{{ k8s_ca_cert_hash.stdout_lines[0] }}"

- name: Register Join Command
  add_host:
    name: "dummy_k8s_node"
    join_command: "{{ k8s_join_command }}"