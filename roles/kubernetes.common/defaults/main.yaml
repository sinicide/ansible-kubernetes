# k8s
k8s_version: "{{ kubernetes_version }}"
# ordering here is important as kubeadm will install kubelet and kubectl as dependencies
k8s_packages:
  - kubelet
  - kubectl
  - kubeadm

k8s_base_url: "https://pkgs.k8s.io/core:/stable:/v"
k8s_apt_key: "{{ k8s_base_url }}{{ kubernetes_minor_version }}/deb/Release.key"
k8s_keyring_path: "/etc/apt/keyrings/kubernetes-apt-keyring.gpg"
k8s_apt_repo: "deb [signed-by={{ k8s_keyring_path }}] {{ k8s_base_url }}{{ kubernetes_minor_version }}/deb/ /"
k8s_rpm_repo: "{{ k8s_base_url }}{{ kubernetes_minor_version }}/rpm/"
k8s_rpm_key: "{{ k8s_base_url }}{{ kubernetes_minor_version }}/rpm/repodata/repomd.xml.key"

# k3s
k3s_github_url: "https://github.com/rancher/k3s/releases"
k3s_version: "v1.19.5+k3s1"
k3s_bin_dir: "/usr/bin"
k3s_suffix: "{% if ansible_architecture == 'arm64' or ansible_architecture == 'aarch64' %}-arm64{% endif %}"
k3s_binary_download_url: "{{k3s_github_url}}/download/{{k3s_version}}/k3s{{k3s_suffix}}"

# raspberry pi
cmdline_file: "{% if ansible_distribution == 'Ubuntu' %}/boot/firmware/cmdline.txt{% else %}/boot/cmdline.txt{% endif %}"
cmdline_arg: "cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory swapaccount=1"