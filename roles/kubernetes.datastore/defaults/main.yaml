# ETCD Binary Version from https://github.com/etcd-io/etcd/releases
etcd_version: "3.6.5"
arch: "{% if ansible_architecture == 'aarch64' %}arm64{% else %}amd64{% endif %}"
etcd_download_url: "https://github.com/etcd-io/etcd/releases/download/v{{ etcd_version }}/etcd-v{{ etcd_version }}-linux-{{ arch }}.tar.gz"
etcd_bin_path: "/usr/bin"
etcd_system_service: "/etc/systemd/system/etcd.service"
etcd_user: "etcd"
etcd_group: "{{ etcd_user }}"
etcd_ssl_dir: "/var/private/ssl/etcd"
etcd_health_check_command: "etcdctl {% if etcd_config.ssl.enabled %}--insecure-skip-tls-verify=true {% endif %}--endpoints={{ etcd_config.protocol }}://localhost:{{ etcd_config.client_port }} endpoint health"

# etcd cluster type "stacked" or "external", default "stacked" is to no deploy etcd
etcd_cluster_type: "{{ etcd.type | default('stacked') }}"

# cluster bootstrapping type 'static' or 'discovery'
bootstrap_type: "static"
# member names cannot contain special characters like '-'
# need to set load balanced option
initial_cluster_bootstrap: "{% for cp_ips in groups['controlplanes'] %}{{ hostvars[cp_ips]['ansible_hostname'] | regex_replace('-', '') }}={{ etcd_config.protocol }}://{{ hostvars[cp_ips]['ansible_default_ipv4']['address'] }}:{{ etcd_config.peer_port }}{% if not loop.last %},{% endif %}{% endfor %}"

# etcd configuration
etcd_config:
  data_dir: "/var/lib/etcd"
  config_dir: "/etc/etcd"
  client_port: "{{ etcd.custom_config.client_port | default(2379) }}"
  peer_port: "{{ etcd.custom_config.peer_port | default(2380) }}"
  protocol: "http{% if etcd_config.ssl.enabled %}s{% endif %}"
  wal:
    max_snapshots: "{{ etcd.custom_config.wal.max_snapshots | default(5) }}"
    max_files: "{{ etcd.custom_config.wal.max_files | default(5) }}"
  member:
    snapshot_count: "{{ etcd.custom_config.member.snapshot_count | default(10000) }}"
    heartbeat_interval: "{{ etcd.custom_config.member.heartbeat_interval | default(100) }}"
    election_timeout: "{{ etcd.custom_config.member.election_timeout | default(1000) }}"
    quota_backend_bytes: "{{ etcd.custom_config.memeber.quota_backend_bytes | default(0) }}"
  cluster:
    # new or existing
    state: "{{ etcd.custom_config.cluster.state | default('new') }}"
    token: "{{ etcd.cutsom_config.cluster.token | default('etcd-token') }}"
    auto_compaction_retention: "{{ etcd.custom_config.cluster.auto_compaction_retention | default(1) }}"
    # periodic, defaults to hours when no units specified, revision
    auto_compaction_mode: "{{ etcd.custom_config.cluster.auto_compaction_mode | default('periodic') }}"
  logging:
    enabled: "{{ etcd.custom_config.logging.enabled | default(false) }}"
    level: "{{ etcd.custom_config.logging.level | default('info') }}"
    # json or console
    format: "{{ etcd.custom_config.logging.format | default('json') }}"
  metrics:
    enabled: "{{ etcd.custom_config.metrics.enabled | default(true) }}"
    # default is basic, extensive
    level: "{{ etcd.custom_config.metrics.level | default() }}"
  ssl:
    enabled: "{{ etcd.custom_config.ssl.enabled | default(false) }}"
    tls_min_version: "{{ etcd.custom_config.ssl.tls_min_version | default('TLS1.2') }}"
    tls_max_version: "{{ etcd.custom_config.ssl.tls_max_version | default('TLS1.3') }}"
    client_transport_security:
      client_auth: "{{ etcd.custom_config.ssl.client_transport_security.client_auth | default(false) }}"
      auto_tls: "{{ etcd.custom_config.ssl.client_transport_security.auto_tls | default(false) }}"
      ca_file: "{{ etcd_ssl_dir }}/client/etcd.ca.pem"
      cert_file: "{{ etcd_ssl_dir }}/client/etcd.server.pem"
      key_file: "{{ etcd_ssl_dir }}/client/etcd.server.key"
    peer_transport_security:
      client_auth: "{{ etcd.custom_config.ssl.peer_transport_security.client_auth | default(false) }}"
      auto_tls: "{{ etcd.custom_config.ssl.peer_transport_security.auto_tls | default(false) }}"
      ca_file: "{{ etcd_ssl_dir }}/peer/etcd.ca.pem"
      cert_file: "{{ etcd_ssl_dir }}/peer/etcd.server.pem"
      key_file: "{{ etcd_ssl_dir }}/peer/etcd.server.key"
      allowed_cn: "{{ etcd.custom_config.ssl.peer_transport_security.allowed_cn | default() }}"
